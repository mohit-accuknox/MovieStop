{"version":3,"file":"HomeCard.stories.0ba92454.js","sources":["../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/style-value-types/dist/es/utils.mjs","../../node_modules/style-value-types/dist/es/numbers/index.mjs","../../node_modules/style-value-types/dist/es/numbers/units.mjs","../../node_modules/style-value-types/dist/es/color/utils.mjs","../../node_modules/style-value-types/dist/es/color/hsla.mjs","../../node_modules/style-value-types/dist/es/color/rgba.mjs","../../node_modules/style-value-types/dist/es/color/hex.mjs","../../node_modules/style-value-types/dist/es/color/index.mjs","../../node_modules/style-value-types/dist/es/complex/index.mjs","../../node_modules/style-value-types/dist/es/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/render/utils/types.mjs","../../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/utils.mjs","../../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../node_modules/tslib/tslib.es6.js","../../node_modules/hey-listen/dist/hey-listen.es.js","../../node_modules/popmotion/dist/es/utils/clamp.mjs","../../node_modules/popmotion/dist/es/animations/utils/find-spring.mjs","../../node_modules/popmotion/dist/es/animations/generators/spring.mjs","../../node_modules/popmotion/dist/es/utils/progress.mjs","../../node_modules/popmotion/dist/es/utils/mix.mjs","../../node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/popmotion/dist/es/utils/mix-color.mjs","../../node_modules/popmotion/dist/es/utils/inc.mjs","../../node_modules/popmotion/dist/es/utils/pipe.mjs","../../node_modules/popmotion/dist/es/utils/mix-complex.mjs","../../node_modules/popmotion/dist/es/utils/interpolate.mjs","../../node_modules/popmotion/dist/es/easing/utils.mjs","../../node_modules/popmotion/dist/es/easing/index.mjs","../../node_modules/popmotion/dist/es/animations/generators/keyframes.mjs","../../node_modules/popmotion/dist/es/animations/generators/decay.mjs","../../node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs","../../node_modules/framesync/dist/es/on-next-frame.mjs","../../node_modules/framesync/dist/es/create-render-step.mjs","../../node_modules/framesync/dist/es/index.mjs","../../node_modules/popmotion/dist/es/animations/utils/elapsed.mjs","../../node_modules/popmotion/dist/es/animations/index.mjs","../../node_modules/popmotion/dist/es/utils/velocity-per-second.mjs","../../node_modules/popmotion/dist/es/animations/inertia.mjs","../../node_modules/popmotion/dist/es/utils/is-point.mjs","../../node_modules/popmotion/dist/es/utils/is-point-3d.mjs","../../node_modules/popmotion/dist/es/utils/distance.mjs","../../node_modules/popmotion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../../node_modules/framer-motion/dist/es/utils/process.mjs","../../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/render/html/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/svg/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../../node_modules/framer-motion/dist/es/animation/animate.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../node_modules/react-query/es/core/utils.js","../../node_modules/react-query/es/core/notifyManager.js","../../node_modules/react-query/es/react/reactBatchedUpdates.js","../../node_modules/react-query/es/react/setBatchUpdatesFn.js","../../src/MovieData.jsx","../../src/components/HomePage/HomeCard.jsx"],"sourcesContent":["/**\n * @remix-run/router v1.0.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, null, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n\n      if (listener) {\n        listener({\n          action,\n          location: getCurrentLocation()\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    var _globalHistory$state, _globalHistory$state2;\n\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    ((_globalHistory$state = globalHistory.state) == null ? void 0 : _globalHistory$state.usr) || null, ((_globalHistory$state2 = globalHistory.state) == null ? void 0 : _globalHistory$state2.key) || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    var _globalHistory$state3, _globalHistory$state4;\n\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    ((_globalHistory$state3 = globalHistory.state) == null ? void 0 : _globalHistory$state3.usr) || null, ((_globalHistory$state4 = globalHistory.state) == null ? void 0 : _globalHistory$state4.key) || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location) {\n  return {\n    usr: location.state,\n    key: location.key\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to == null ? void 0 : to.key) || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n\n  function handlePop() {\n    action = Action.Pop;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    validateLocation == null ? void 0 : validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    validateLocation == null ? void 0 : validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: location\n      });\n    }\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {})); // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n\n    let dataRoute = _extends({}, route, {\n      id,\n      children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n    });\n\n    return dataRoute;\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant(route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\n\n\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    invariant(params[key] != null, \"Missing \\\":\" + key + \"\\\" param\");\n    return params[key];\n  }).replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n    const star = \"*\";\n\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[@.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n/**\n * @private\n */\n\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : _extends({}, toArg);\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data) {\n    this.pendingKeys = new Set();\n    this.subscriber = undefined;\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    var _this$subscriber2;\n\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      var _this$subscriber;\n\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      (_this$subscriber = this.subscriber) == null ? void 0 : _this$subscriber.call(this, false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    (_this$subscriber2 = this.subscriber) == null ? void 0 : _this$subscriber2.call(this, false);\n    return data;\n  }\n\n  subscribe(fn) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    var _this$subscriber3;\n\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    (_this$subscriber3 = this.subscriber) == null ? void 0 : _this$subscriber3.call(this, true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nfunction defer(data) {\n  return new DeferredData(data);\n}\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\n\nfunction isRouteErrorResponse(e) {\n  return e instanceof ErrorResponse;\n}\n\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n}; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  var _init$hydrationData, _init$hydrationData2, _init$hydrationData3;\n\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n\n  let initialScrollRestored = false;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let {\n      matches,\n      route,\n      error\n    } = getNotFoundMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: ((_init$hydrationData = init.hydrationData) == null ? void 0 : _init$hydrationData.loaderData) || {},\n    actionData: ((_init$hydrationData2 = init.hydrationData) == null ? void 0 : _init$hydrationData2.actionData) || null,\n    errors: ((_init$hydrationData3 = init.hydrationData) == null ? void 0 : _init$hydrationData3.errors) || initialErrors,\n    fetchers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location\n      } = _ref;\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    var _pendingNavigationCon;\n\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    (_pendingNavigationCon = pendingNavigationController) == null ? void 0 : _pendingNavigationCon.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - This should not be susceptible to false positives for\n    //   loading/submissionRedirect since there would not be actionData in the\n    //   state since the prior action would have returned a redirect response\n    //   and short circuited\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && state.navigation.state === \"loading\"; // Always preserve any existing loaderData from re-used routes\n\n    let newLoaderData = newState.loaderData ? {\n      loaderData: mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [])\n    } : {};\n    updateState(_extends({}, isActionReload ? {} : {\n      actionData: null\n    }, newState, newLoaderData, {\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData ? false : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, opts);\n    let location = createLocation(state.location, path, opts == null ? void 0 : opts.state);\n    let historyAction = (opts == null ? void 0 : opts.replace) === true || submission != null ? Action.Replace : Action.Push;\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts == null ? void 0 : opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    var _pendingNavigationCon2;\n\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    (_pendingNavigationCon2 = pendingNavigationController) == null ? void 0 : _pendingNavigationCon2.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts == null ? void 0 : opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts == null ? void 0 : opts.preventScrollReset) === true;\n    let loadingNavigation = opts == null ? void 0 : opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change\n\n\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createRequest(location, pendingNavigationController.signal, opts == null ? void 0 : opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts != null && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts != null && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation;\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts == null ? void 0 : opts.submission, opts == null ? void 0 : opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors\n    });\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = getMethodNotAllowedResult(location);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, result.location)\n      }, submission);\n\n      await startRedirectNavigation(result, redirectNavigation, opts == null ? void 0 : opts.replace);\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts == null ? void 0 : opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches != null && matches.some(m => m.route.id === routeId)) || (matchesToLoad == null ? void 0 : matchesToLoad.some(m => m.route.id === routeId))); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null\n      });\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(_ref2 => {\n        var _state$fetchers$get;\n\n        let [key] = _ref2;\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: (_state$fetchers$get = state.fetchers.get(key)) == null ? void 0 : _state$fetchers$get.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState(_extends({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null\n      }, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(_ref3 => {\n      let [key] = _ref3;\n      return fetchControllers.set(key, pendingNavigationController);\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(_ref4 => {\n      let [key] = _ref4;\n      return fetchControllers.delete(key);\n    }); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation, replace);\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (typeof AbortController === \"undefined\") {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, new ErrorResponse(404, \"Not Found\", null));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, opts);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, [path, match]);\n    handleFetcherLoader(key, routeId, path, match);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, submission) {\n    var _state$fetchers$get2;\n\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let {\n        error\n      } = getMethodNotAllowedResult(path);\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: ((_state$fetchers$get2 = state.fetchers.get(key)) == null ? void 0 : _state$fetchers$get2.data) || undefined\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, actionResult.location)\n      }, submission);\n\n      await startRedirectNavigation(actionResult, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createRequest(nextLocation, abortController.signal);\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission);\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {\n      [match.route.id]: actionResult.data\n    }, undefined, // No need to send through errors since we short circuit above\n    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(_ref5 => {\n      let [staleKey] = _ref5;\n      return staleKey !== key;\n    }).forEach(_ref6 => {\n      var _state$fetchers$get3;\n\n      let [staleKey] = _ref6;\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: (_state$fetchers$get3 = state.fetchers.get(staleKey)) == null ? void 0 : _state$fetchers$get3.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(_ref7 => {\n      let [staleKey] = _ref7;\n      return fetchControllers.delete(staleKey);\n    });\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation);\n      return;\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      var _pendingNavigationCon3;\n\n      invariant(pendingAction, \"Expected pending action\");\n      (_pendingNavigationCon3 = pendingNavigationController) == null ? void 0 : _pendingNavigationCon3.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match) {\n    var _state$fetchers$get4;\n\n    // Put this fetcher into it's loading state\n    let loadingFetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: ((_state$fetchers$get4 = state.fetchers.get(key)) == null ? void 0 : _state$fetchers$get4.data) || undefined\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match); // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = getLoaderRedirect(state, result);\n      await startRedirectNavigation(result, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(redirect, navigation, replace) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    invariant(navigation.location, \"Expected a location on the redirect navigation\"); // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    await startNavigation(redirectHistoryAction, navigation.location, {\n      overrideNavigation: navigation\n    });\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(m => callLoaderOrAction(\"loader\", request, m)), ...fetchersToLoad.map(_ref8 => {\n      let [, href, match] = _ref8;\n      return callLoaderOrAction(\"loader\", createRequest(href, request.signal), match);\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(_ref9 => {\n      let [,, match] = _ref9;\n      return match;\n    }), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    createHref,\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nfunction unstable_createStaticHandler(routes) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to unstable_createStaticHandler\");\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n\n  async function query(request) {\n    let {\n      location,\n      result\n    } = await queryImpl(request);\n\n    if (result instanceof Response) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location\n    }, result);\n  }\n\n  async function queryRoute(request, routeId) {\n    let {\n      result\n    } = await queryImpl(request, routeId);\n\n    if (result instanceof Response) {\n      return result;\n    } // Pick off the right state value to return\n\n\n    let routeData = [result.errors, result.actionData, result.loaderData].find(v => v);\n    let value = Object.values(routeData || {})[0];\n\n    if (isRouteErrorResponse(value)) {\n      return new Response(value.data, {\n        status: value.status,\n        statusText: value.statusText\n      });\n    }\n\n    return value;\n  }\n\n  async function queryImpl(request, routeId) {\n    invariant(request.method !== \"HEAD\", \"query()/queryRoute() do not support HEAD requests\");\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    let {\n      location,\n      matches,\n      shortCircuitState\n    } = matchRequest(request, routeId);\n\n    try {\n      if (shortCircuitState) {\n        return {\n          location,\n          result: shortCircuitState\n        };\n      }\n\n      if (request.method !== \"GET\") {\n        let result = await submit(request, matches, getTargetMatch(matches, location), routeId != null);\n        return {\n          location,\n          result\n        };\n      }\n\n      let result = await loadRouteData(request, matches, routeId != null);\n      return {\n        location,\n        result: _extends({}, result, {\n          actionData: null,\n          actionHeaders: {}\n        })\n      };\n    } catch (e) {\n      if (e instanceof Response) {\n        return {\n          location,\n          result: e\n        };\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action) {\n      let href = createHref(new URL(request.url));\n      result = getMethodNotAllowedResult(href);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, true, isRouteRequest);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // calLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          matches: [actionMatch],\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          // Note: statusCode + headers are unused here since queryRoute will\n          // return the raw Response or value\n          statusCode: 500,\n          loaderHeaders: {},\n          actionHeaders: {}\n        };\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, isRouteRequest, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n\n    let context = await loadRouteData(request, matches, isRouteRequest);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, isRouteRequest, pendingActionError) {\n    let matchesToLoad = getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]).filter(m => m.route.loader); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(m => callLoaderOrAction(\"loader\", request, m, true, isRouteRequest))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n\n\n    results.forEach(result => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    }); // Process and commit output from loaders\n\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError);\n    return _extends({}, context, {\n      matches\n    });\n  }\n\n  function matchRequest(req, routeId) {\n    let url = new URL(req.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (matches && routeId) {\n      matches = matches.filter(m => m.route.id === routeId);\n    } // Short circuit with a 404 if we match nothing\n\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes);\n      return {\n        location,\n        matches: notFoundMatches,\n        shortCircuitState: {\n          matches: notFoundMatches,\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [route.id]: error\n          },\n          statusCode: 404,\n          loaderHeaders: {},\n          actionHeaders: {}\n        }\n      };\n    }\n\n    return {\n      location,\n      matches\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\nfunction normalizeNavigateOptions(to, opts) {\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !(\"formMethod\" in opts) && !(\"formData\" in opts)) {\n    return {\n      path\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  if (opts.formMethod != null && opts.formMethod !== \"get\") {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: createHref(parsePath(path)),\n        formEncType: (opts == null ? void 0 : opts.formEncType) || \"application/x-www-form-urlencoded\",\n        formData: opts.formData\n      }\n    };\n  } // No formData to flatten for GET submission\n\n\n  if (!opts.formData) {\n    return {\n      path\n    };\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData);\n    parsedPath.search = \"?\" + searchParams;\n  } catch (e) {\n    return {\n      path,\n      error: new ErrorResponse(400, \"Bad Request\", \"Cannot submit binary form data using GET\")\n    };\n  }\n\n  return {\n    path: createPath(parsedPath)\n  };\n}\n\nfunction getLoaderRedirect(state, redirect) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    formData\n  } = state.navigation;\n  let navigation = {\n    state: \"loading\",\n    location: createLocation(state.location, redirect.location),\n    formMethod: formMethod || undefined,\n    formAction: formAction || undefined,\n    formEncType: formEncType || undefined,\n    formData: formData || undefined\n  };\n  return navigation;\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : null; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => match.route.loader != null && (isNewLoader(state.loaderData, state.matches[index], match) || // If this route had a pending deferred cancelled it must be revalidated\n  cancelledDeferredRoutes.some(id => id === match.route.id) || shouldRevalidateLoader(state.location, state.matches[index], submission, location, match, isRevalidationRequired, actionResult))); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches == null ? void 0 : fetchLoadMatches.forEach((_ref10, key) => {\n    let [href, match] = _ref10;\n\n    // This fetcher was cancelled from a prior action submission - force reload\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push([key, href, match]);\n    } else if (isRevalidationRequired) {\n      let shouldRevalidate = shouldRevalidateLoader(href, match, submission, href, match, isRevalidationRequired, actionResult);\n\n      if (shouldRevalidate) {\n        revalidatingFetchers.push([key, href, match]);\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  var _currentMatch$route$p;\n\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    ((_currentMatch$route$p = currentMatch.route.path) == null ? void 0 : _currentMatch$route$p.endsWith(\"*\")) && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(currentLocation, currentMatch, submission, location, match, isRevalidationRequired, actionResult) {\n  let currentUrl = createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createURL(location);\n  let nextParams = match.params; // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n\n  let defaultShouldRevalidate = isNewRouteInstance(currentMatch, match) || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search || // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate(_extends({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate\n    }));\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(type, request, match, skipRedirects, isRouteRequest) {\n  if (skipRedirects === void 0) {\n    skipRedirects = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result; // Setup a promise we can race against so that abort signals short circuit\n\n  let reject;\n  let abortPromise = new Promise((_, r) => reject = r);\n\n  let onReject = () => reject();\n\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n    result = await Promise.race([handler({\n      request,\n      params: match.params\n    }), abortPromise]);\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (result instanceof Response) {\n    var _result$headers$get;\n\n    // Process redirects\n    let status = result.status;\n    let location = result.headers.get(\"Location\"); // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping\n\n    if (isRouteRequest) {\n      throw result;\n    }\n\n    if (status >= 300 && status <= 399 && location != null) {\n      // Don't process redirects in the router during SSR document requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect\n      if (skipRedirects) {\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n\n    let data;\n\n    if ((_result$headers$get = result.headers.get(\"Content-Type\")) != null && _result$headers$get.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n\nfunction createRequest(location, signal, submission) {\n  let url = createURL(location).toString();\n  let init = {\n    signal\n  };\n\n  if (submission) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(typeof value === \"string\", 'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' + 'please use \"multipart/form-data\" instead.');\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error\n      }); // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds == null ? void 0 : activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data; // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data; // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n      if (result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key,, match] = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      var _errors;\n\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n\n      if (!((_errors = errors) != null && _errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  matches.forEach(match => {\n    let id = match.route.id;\n\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getNotFoundMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || r.path === \"\" || r.path === \"/\") || {\n    id: \"__shim-404-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route,\n    error: new ErrorResponse(404, \"Not Found\", null)\n  };\n}\n\nfunction getMethodNotAllowedResult(path) {\n  let href = typeof path === \"string\" ? path : createHref(path);\n  console.warn(\"You're trying to submit to a route that does not have an action.  To \" + \"fix this, please add an `action` function to the route for \" + (\"[\" + href + \"]\"));\n  return {\n    type: ResultType.error,\n    error: new ErrorResponse(405, \"Method Not Allowed\", \"No action found for [\" + href + \"]\")\n  };\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n} // Create an href to represent a \"server\" URL without the hash\n\n\nfunction createHref(location) {\n  return (location.pathname || \"\") + (location.search || \"\");\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result == null ? void 0 : result.type) === ResultType.redirect;\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData == null ? void 0 : currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && !hasNakedIndexQuery(search || \"\")) {\n    return matches.slice(-2)[0];\n  }\n\n  return matches.slice(-1)[0];\n}\n\nfunction createURL(location) {\n  let base = typeof window !== \"undefined\" && typeof window.location !== \"undefined\" ? window.location.origin : \"unknown://unknown\";\n  let href = typeof location === \"string\" ? location : createHref(location);\n  return new URL(href, base);\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_FETCHER, IDLE_NAVIGATION, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, unstable_createStaticHandler, warning };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.4.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, resolveTo, joinPaths, matchPath, warning, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\n\n// Contexts for data routers\nconst DataStaticRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || !match.route.index && match.pathnameBase !== matches[index - 1].pathnameBase);\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unhandled Thrown Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"<Route>\")));\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    }) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches: parentMatches.concat(renderedMatches.slice(0, index + 1))\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren()\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, hookName + \" must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return state;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRevalidator must be used within a DataRouterContext\") : invariant(false) : void 0;\n  let state = useDataRouterState(DataRouterHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterHook.UseLoaderData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData must be used inside a RouteContext\") : invariant(false) : void 0;\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return state.loaderData[thisRoute.route.id];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1]; // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  }\n\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError must be used inside a RouteContext\") : invariant(false) : void 0;\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0; // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[thisRoute.route.id];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Sync router state to our component state to force re-renders\n  let state = useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement)));\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n\n    return routeClone;\n  });\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, DataStaticRouterContext as UNSAFE_DataStaticRouterContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.4.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_DataRouterContext, UNSAFE_RouteContext, useMatches, useNavigation } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, matchPath, invariant } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach(value => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method,\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"];\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to);\n  let match = useMatch({\n    path: path.pathname,\n    end,\n    caseSensitive\n  });\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  let nextPath = useResolvedPath(nextLocation || \"\");\n  let nextMatch = React.useMemo(() => nextLocation ? matchPath({\n    path: path.pathname,\n    end,\n    caseSensitive\n  }, nextPath.pathname) : null, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  let isPending = nextMatch != null;\n  let isActive = match != null;\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method,\n      replace,\n      relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = React.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useSubmitImpl must be used within a Data Router\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action != null ? action : \".\";\n  let path = useResolvedPath(resolvedAction, {\n    relative\n  }); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used within a Data Router\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetchers must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterContext\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !(router != null && state != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = state; // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.syncRender();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notifyUnmount(), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform || transformTemplate) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (!latestValues.transform && style.transform) {\n        /**\n         * If we have previously created a transform but currently don't have any,\n         * reset transform style to none.\n         */\n        style.transform = \"none\";\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { __rest } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","const progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","const mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","function hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { hsla, rgba, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nconst notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`;\nconst mixColor = (from, to) => {\n    let fromColorType = getColorType(from);\n    let toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    let fromColor = fromColorType.parse(from);\n    let toColor = toColorType.parse(to);\n    if (fromColorType === hsla) {\n        fromColor = hslaToRgba(fromColor);\n        fromColorType = rgba;\n    }\n    if (toColorType === hsla) {\n        toColor = hslaToRgba(toColor);\n        toColorType = rgba;\n    }\n    const blended = Object.assign({}, fromColor);\n    return (v) => {\n        for (const key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixLinearColor(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nconst isNum = (v) => typeof v === 'number';\n\nexport { isNum, zeroPoint };\n","const combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { isNum } from './inc.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = Object.assign(Object.assign({}, origin), target);\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numRGB = 0;\n    let numHSL = 0;\n    for (let i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed, numNumbers, numRGB, numHSL };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { progress } from './progress.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { invariant } from 'hey-listen';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate([from, to], [mixer]) {\n    return (v) => mixer(progress(from, to, v));\n}\nfunction slowInterpolate(input, mixers) {\n    const inputLength = input.length;\n    const lastInputIndex = inputLength - 1;\n    return (v) => {\n        let mixerIndex = 0;\n        let foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            let i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const reverseEasing = easing => p => 1 - easing(1 - p);\nconst mirrorEasing = easing => p => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\nconst createExpoIn = (power) => p => Math.pow(p, power);\nconst createBackIn = (power) => p => p * p * ((power + 1) * p - power);\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return p => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\n\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\n","import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.mjs';\n\nconst DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nconst BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nconst BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nconst BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nconst linear = p => p;\nconst easeIn = createExpoIn(2);\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\nconst circIn = p => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\nconst backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\nconst anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nconst ca = 4356.0 / 361.0;\nconst cb = 35442.0 / 1805.0;\nconst cc = 16061.0 / 1805.0;\nconst bounceOut = (p) => {\n    if (p === 1 || p === 0)\n        return p;\n    const p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nconst bounceIn = reverseEasing(bounceOut);\nconst bounceInOut = (p) => p < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n    : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\n","import { interpolate } from '../../utils/interpolate.mjs';\nimport { easeInOut } from '../../easing/index.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    const state = { done: false, value: from };\n    const values = Array.isArray(to) ? to : [from, to];\n    const times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { spring } from '../generators/spring.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { decay } from '../generators/decay.mjs';\n\nconst types = { keyframes, spring, decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    const keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nexport { detectAnimationFromOptions };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\n\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options.duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n","function velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');\n\nexport { isPoint };\n","import { isPoint } from './is-point.mjs';\n\nconst isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');\n\nexport { isPoint3D };\n","import { isPoint } from './is-point.mjs';\nimport { isPoint3D } from './is-point-3d.mjs';\nimport { isNum } from './inc.mjs';\n\nconst distance1D = (a, b) => Math.abs(a - b);\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        const xDelta = distance1D(a.x, b.x);\n        const yDelta = distance1D(a.y, b.y);\n        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n","import { linear } from './index.mjs';\n\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\nconst c = (a1) => 3.0 * a1;\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nconst newtonIterations = 8;\nconst newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (let i = 0; i < newtonIterations; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    const sampleValues = new Float32Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\n\nconst easingLookup = {\n    linear,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n    bounceIn,\n    bounceInOut,\n    bounceOut,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { inertia, animate } from 'popmotion';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let delayTimer;\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delay = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        if (delay) {\n            delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return () => {\n            clearTimeout(delayTimer);\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { velocityPerSecond } from 'popmotion';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.3.6\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.forEachValue((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.forEachValue((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notifyAnimationStart(definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notifyAnimationComplete(definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notifyAnimationComplete(variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix, distance } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { mix, progress, clamp } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { hasScale, hasTransform };\n","import { mix } from 'popmotion';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.syncRender();\n            /**\n             * This must fire after the syncRender call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.actual[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.getInstance().style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.syncRender();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\n\nconst names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    const managers = names.map(() => new SubscriptionManager());\n    const propSubscriptions = {};\n    const lifecycles = {\n        clearAllListeners: () => managers.forEach((manager) => manager.clear()),\n        updatePropListeners: (props) => {\n            names.forEach((name) => {\n                var _a;\n                const on = \"on\" + name;\n                const propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach((manager, i) => {\n        lifecycles[\"on\" + names[i]] = (handler) => manager.add(handler);\n        lifecycles[\"notify\" + names[i]] = (...args) => manager.notify(...args);\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.3.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.3.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import sync, { cancelSync } from 'framesync';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { createLifecycles } from './utils/lifecycles.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { env } from '../utils/process.mjs';\nimport { invariant } from 'hey-listen';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createElement } from 'react';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst visualElement = ({ treeType = \"\", build, getBaseTarget, makeTargetAnimatable, measureViewportBox, render: renderInstance, readValueFromInstance, removeValueFromRenderState, sortNodePosition, scrapeMotionValuesFromProps, }) => ({ parent, props, presenceId, blockInitialAnimation, visualState, reducedMotionConfig, }, options = {}) => {\n    let isMounted = false;\n    const { latestValues, renderState } = visualState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n    let instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n    const lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n    const values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n    const valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n    let prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n    const baseTarget = {\n        ...latestValues,\n    };\n    // Internal methods ========================\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n    let removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n    function render() {\n        if (!instance || !isMounted)\n            return;\n        triggerBuild();\n        renderInstance(instance, renderState, props.style, element.projection);\n    }\n    function triggerBuild() {\n        build(element, renderState, latestValues, options, props);\n    }\n    function update() {\n        lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n    function bindToMotionValue(key, value) {\n        const removeOnChange = value.onChange((latestValue) => {\n            latestValues[key] = latestValue;\n            props.onUpdate && sync.update(update, false, true);\n        });\n        const removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n        valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n    const { willChange, ...initialMotionValues } = scrapeMotionValuesFromProps(props);\n    for (const key in initialMotionValues) {\n        const value = initialMotionValues[key];\n        if (latestValues[key] !== undefined && isMotionValue(value)) {\n            value.set(latestValues[key], false);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n        }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    const element = {\n        treeType,\n        /**\n         * This is a mirror of the internal instance prop, which keeps\n         * VisualElement type-compatible with React's RefObject.\n         */\n        current: null,\n        /**\n         * The depth of this visual element within the visual element tree.\n         */\n        depth: parent ? parent.depth + 1 : 0,\n        parent,\n        children: new Set(),\n        /**\n         *\n         */\n        presenceId,\n        shouldReduceMotion: null,\n        /**\n         * If this component is part of the variant tree, it should track\n         * any children that are also part of the tree. This is essentially\n         * a shadow tree to simplify logic around how to stagger over children.\n         */\n        variantChildren: isVariantNode$1 ? new Set() : undefined,\n        /**\n         * Whether this instance is visible. This can be changed imperatively\n         * by the projection tree, is analogous to CSS's visibility in that\n         * hidden elements should take up layout, and needs enacting by the configured\n         * render function.\n         */\n        isVisible: undefined,\n        /**\n         * Normally, if a component is controlled by a parent's variants, it can\n         * rely on that ancestor to trigger animations further down the tree.\n         * However, if a component is created after its parent is mounted, the parent\n         * won't trigger that mount animation so the child needs to.\n         *\n         * TODO: This might be better replaced with a method isParentMounted\n         */\n        manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),\n        /**\n         * This can be set by AnimatePresence to force components that mount\n         * at the same time as it to mount as if they have initial={false} set.\n         */\n        blockInitialAnimation,\n        /**\n         * Determine whether this component has mounted yet. This is mostly used\n         * by variant children to determine whether they need to trigger their\n         * own animations on mount.\n         */\n        isMounted: () => Boolean(instance),\n        mount(newInstance) {\n            isMounted = true;\n            instance = element.current = newInstance;\n            if (element.projection) {\n                element.projection.mount(newInstance);\n            }\n            if (isVariantNode$1 && parent && !isControllingVariants$1) {\n                removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n            }\n            values.forEach((value, key) => bindToMotionValue(key, value));\n            if (!hasReducedMotionListener.current) {\n                initPrefersReducedMotion();\n            }\n            element.shouldReduceMotion =\n                reducedMotionConfig === \"never\"\n                    ? false\n                    : reducedMotionConfig === \"always\"\n                        ? true\n                        : prefersReducedMotion.current;\n            parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            element.setProps(props);\n        },\n        /**\n         *\n         */\n        unmount() {\n            var _a;\n            (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n            cancelSync.update(update);\n            cancelSync.render(render);\n            valueSubscriptions.forEach((remove) => remove());\n            removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n            parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n            lifecycles.clearAllListeners();\n            instance = undefined;\n            isMounted = false;\n        },\n        loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n            const features = [];\n            /**\n             * If we're in development mode, check to make sure we're not rendering a motion component\n             * as a child of LazyMotion, as this will break the file-size benefits of using it.\n             */\n            if (env !== \"production\" && preloadedFeatures && isStrict) {\n                invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n            }\n            for (let i = 0; i < numFeatures; i++) {\n                const name = featureNames[i];\n                const { isEnabled, Component } = featureDefinitions[name];\n                /**\n                 * It might be possible in the future to use this moment to\n                 * dynamically request functionality. In initial tests this\n                 * was producing a lot of duplication amongst bundles.\n                 */\n                if (isEnabled(renderedProps) && Component) {\n                    features.push(createElement(Component, {\n                        key: name,\n                        ...renderedProps,\n                        visualElement: element,\n                    }));\n                }\n            }\n            if (!element.projection && ProjectionNodeConstructor) {\n                element.projection = new ProjectionNodeConstructor(projectionId, element.getLatestValues(), parent && parent.projection);\n                const { layoutId, layout, drag, dragConstraints, layoutScroll, } = renderedProps;\n                element.projection.setOptions({\n                    layoutId,\n                    layout,\n                    alwaysMeasureLayout: Boolean(drag) ||\n                        (dragConstraints && isRefObject(dragConstraints)),\n                    visualElement: element,\n                    scheduleRender: () => element.scheduleRender(),\n                    /**\n                     * TODO: Update options in an effect. This could be tricky as it'll be too late\n                     * to update by the time layout animations run.\n                     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                     * ensuring it gets called if there's no potential layout animations.\n                     *\n                     */\n                    animationType: typeof layout === \"string\" ? layout : \"both\",\n                    initialPromotionConfig: initialLayoutGroupConfig,\n                    layoutScroll,\n                });\n            }\n            return features;\n        },\n        /**\n         * Add a child visual element to our set of children.\n         */\n        addVariantChild(child) {\n            var _a;\n            const closestVariantNode = element.getClosestVariantNode();\n            if (closestVariantNode) {\n                (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                return () => closestVariantNode.variantChildren.delete(child);\n            }\n        },\n        sortNodePosition(other) {\n            /**\n             * If these nodes aren't even of the same type we can't compare their depth.\n             */\n            if (!sortNodePosition || treeType !== other.treeType)\n                return 0;\n            return sortNodePosition(element.getInstance(), other.getInstance());\n        },\n        /**\n         * Returns the closest variant node in the tree starting from\n         * this visual element.\n         */\n        getClosestVariantNode: () => isVariantNode$1 ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode(),\n        /**\n         * Expose the latest layoutId prop.\n         */\n        getLayoutId: () => props.layoutId,\n        /**\n         * Returns the current instance.\n         */\n        getInstance: () => instance,\n        /**\n         * Get/set the latest static values.\n         */\n        getStaticValue: (key) => latestValues[key],\n        setStaticValue: (key, value) => (latestValues[key] = value),\n        /**\n         * Returns the latest motion value state. Currently only used to take\n         * a snapshot of the visual element - perhaps this can return the whole\n         * visual state\n         */\n        getLatestValues: () => latestValues,\n        /**\n         * Set the visiblity of the visual element. If it's changed, schedule\n         * a render to reflect these changes.\n         */\n        setVisibility(visibility) {\n            if (element.isVisible === visibility)\n                return;\n            element.isVisible = visibility;\n            element.scheduleRender();\n        },\n        /**\n         * Make a target animatable by Popmotion. For instance, if we're\n         * trying to animate width from 100px to 100vw we need to measure 100vw\n         * in pixels to determine what we really need to animate to. This is also\n         * pluggable to support Framer's custom value types like Color,\n         * and CSS variables.\n         */\n        makeTargetAnimatable(target, canMutate = true) {\n            return makeTargetAnimatable(element, target, props, canMutate);\n        },\n        /**\n         * Measure the current viewport box with or without transforms.\n         * Only measures axis-aligned boxes, rotate and skew must be manually\n         * removed with a re-render to work.\n         */\n        measureViewportBox() {\n            return measureViewportBox(instance, props);\n        },\n        // Motion values ========================\n        /**\n         * Add a motion value and bind it to this visual element.\n         */\n        addValue(key, value) {\n            // Remove existing value if it exists\n            if (element.hasValue(key))\n                element.removeValue(key);\n            values.set(key, value);\n            latestValues[key] = value.get();\n            bindToMotionValue(key, value);\n        },\n        /**\n         * Remove a motion value and unbind any active subscriptions.\n         */\n        removeValue(key) {\n            var _a;\n            values.delete(key);\n            (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n            valueSubscriptions.delete(key);\n            delete latestValues[key];\n            removeValueFromRenderState(key, renderState);\n        },\n        /**\n         * Check whether we have a motion value for this key\n         */\n        hasValue: (key) => values.has(key),\n        /**\n         * Get a motion value for this key. If called with a default\n         * value, we'll create one if none exists.\n         */\n        getValue(key, defaultValue) {\n            let value = values.get(key);\n            if (value === undefined && defaultValue !== undefined) {\n                value = motionValue(defaultValue);\n                element.addValue(key, value);\n            }\n            return value;\n        },\n        /**\n         * Iterate over our motion values.\n         */\n        forEachValue: (callback) => values.forEach(callback),\n        /**\n         * If we're trying to animate to a previously unencountered value,\n         * we need to check for it in our state and as a last resort read it\n         * directly from the instance (which might have performance implications).\n         */\n        readValue: (key) => latestValues[key] !== undefined\n            ? latestValues[key]\n            : readValueFromInstance(instance, key, options),\n        /**\n         * Set the base target to later animate back to. This is currently\n         * only hydrated on creation and when we first read a value.\n         */\n        setBaseTarget(key, value) {\n            baseTarget[key] = value;\n        },\n        /**\n         * Find the base target for a value thats been removed from all animation\n         * props.\n         */\n        getBaseTarget(key) {\n            if (getBaseTarget) {\n                const target = getBaseTarget(props, key);\n                if (target !== undefined && !isMotionValue(target))\n                    return target;\n            }\n            return baseTarget[key];\n        },\n        // Lifecyles ========================\n        ...lifecycles,\n        /**\n         * Build the renderer state based on the latest visual state.\n         */\n        build() {\n            triggerBuild();\n            return renderState;\n        },\n        /**\n         * Schedule a render on the next animation frame.\n         */\n        scheduleRender() {\n            sync.render(render, false, true);\n        },\n        /**\n         * Synchronously fire render. It's prefered that we batch renders but\n         * in many circumstances, like layout measurement, we need to run this\n         * synchronously. However in those instances other measures should be taken\n         * to batch reads/writes.\n         */\n        syncRender: render,\n        /**\n         * Update the provided props. Ensure any newly-added motion values are\n         * added to our map, old ones removed, and listeners updated.\n         */\n        setProps(newProps) {\n            if (newProps.transformTemplate || props.transformTemplate) {\n                element.scheduleRender();\n            }\n            props = newProps;\n            lifecycles.updatePropListeners(newProps);\n            prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n        },\n        getProps: () => props,\n        // Variants ==============================\n        /**\n         * Returns the variant definition with a given name.\n         */\n        getVariant: (name) => { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; },\n        /**\n         * Returns the defined default transition on this component.\n         */\n        getDefaultTransition: () => props.transition,\n        getTransformPagePoint: () => {\n            return props.transformPagePoint;\n        },\n        /**\n         * Used by child variant nodes to get the closest ancestor variant props.\n         */\n        getVariantContext(startAtParent = false) {\n            if (startAtParent)\n                return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n            if (!isControllingVariants$1) {\n                const context = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                if (props.initial !== undefined) {\n                    context.initial = props.initial;\n                }\n                return context;\n            }\n            const context = {};\n            for (let i = 0; i < numVariantProps; i++) {\n                const name = variantProps[i];\n                const prop = props[name];\n                if (isVariantLabel(prop) || prop === false) {\n                    context[name] = prop;\n                }\n            }\n            return context;\n        },\n    };\n    return element;\n};\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { visualElement };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.getInstance();\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nconst htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance(domElement, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(domElement);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    },\n    sortNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox(element, { transformPagePoint }) {\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform(element, domElement, props) {\n        const { transformTemplate } = props;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform(instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable(element, { transition, transitionEnd, ...target }, { transformValues }, isMounted = true) {\n        let origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            const parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    },\n    scrapeMotionValuesFromProps,\n    build(element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nconst htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n","import { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\n\nconst svgVisualElement = visualElement({\n    ...htmlConfig,\n    getBaseTarget(props, key) {\n        return props[key];\n    },\n    readValueFromInstance(domElement, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps,\n    build(_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderSVG,\n});\n\nexport { svgVisualElement };\n","import { htmlVisualElement } from '../html/visual-element.mjs';\nimport { svgVisualElement } from '../svg/visual-element.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { mix, progress, circOut, linear } from 'popmotion';\nimport { percent, px } from 'style-value-types';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { distance } from 'popmotion';\nimport { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction isCloseTo(a, b, max = 0.1) {\n    return distance(a, b) <= max;\n}\n\nexport { aspectRatio, boxEquals, isCloseTo, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    let transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nexport { buildProjectionTransform, identityProjection };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { mix } from 'popmotion';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, isCloseTo, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(id, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = () => {\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(id, node) {\n            this.potentialNodes.set(id, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let unblockTimeout;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout);\n                    unblockTimeout = window.setTimeout(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            this.finishAnimation();\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            const measured = this.measure();\n            const layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured,\n                layout,\n                latestValues: {},\n            };\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const measured = this.measure();\n            roundBox(measured);\n            const prevLayout = this.layout;\n            this.layout = {\n                measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        }\n        updateScroll() {\n            if (this.options.layoutScroll && this.instance) {\n                this.isScrollRoot = checkIsScrollRoot(this.instance);\n                this.scroll = measureScroll(this.instance);\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options, isScrollRoot } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (isScrollRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.x);\n                    translateAxis(boxWithoutScroll.y, scroll.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            const lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            const isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.actual, this.relativeParent.layout.actual);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.actual, layout.actual)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.actual.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.actual.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            // Keep a record of all the values we've reset\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const axis = transformAxes[i];\n                const key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { actual: layout, measured: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layout, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layout);\n        const visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layout);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = node.relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${id}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isCloseTo(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TYPES\n// UTILS\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nexport function replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return _extends({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return _extends({}, arg2, {\n    queryKey: arg1\n  });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nexport function parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? _extends({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nexport function mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nexport function matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nexport function hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nexport function stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nexport function getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}","import { scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    var result;\n    this.transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      this.transactions--;\n\n      if (!this.transactions) {\n        this.flush();\n      }\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      scheduleMicrotask(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import { notifyManager } from '../core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\n\r\nexport const Movies = createContext();\r\n\r\nconst MovieData = ({ children }) => {\r\n  const [trendingMovie, setTrendingMovie] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [trendingTv, setTrendingTv] = useState([]);\r\n  const [topRatedTv, setTopRatedTv] = useState([]);\r\n  const [popularMovieData, setPopularMovie] = useState([]);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [searchedMovie, setSearchedMovie] = useState([]);\r\n\r\n  const bookmarkFromLocalStorage = JSON.parse(window.localStorage.getItem(\"bookmark\") || \"[]\");\r\n\r\n  const [bookmarked, setBookmarked] = useState(bookmarkFromLocalStorage);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"bookmark\",JSON.stringify(bookmarked));\r\n  }, [bookmarked])\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  const ApiKey = \"?api_key=0f6ea7d2197801e28575e9c9815767bb\";\r\n  const BaseUrl = \"https://api.themoviedb.org/3\";\r\n  const popularMoviePath = \"/movie/popular\";\r\n  const ImgUrl = \"https://image.tmdb.org/t/p/w500\";\r\n  const TrendingMovies = \"/trending/movie/day\";\r\n  const TopRated = \"/movie/top_rated\";\r\n  const SearchMovieUrl = \"/search/movie\";\r\n\r\n  const {} = useQuery(\"trending\", () => {\r\n    fetch(`${BaseUrl}${TrendingMovies}${ApiKey}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setTrendingMovie(data.results));\r\n  });\r\n\r\n  //   ==============TopRatedMovies==================\r\n\r\n  const {} = useQuery(\"topRated\", () => {\r\n    fetch(`${BaseUrl}${TopRated}${ApiKey}&language=en-US&page=1`)\r\n      .then((res) => res.json())\r\n      .then((data) => setTopRated(data.results));\r\n  });\r\n\r\n  //   ===========trending tv shows===================\r\n  const {} = useQuery(\"trendingtv\", () => {\r\n    fetch(`${BaseUrl}/trending/tv/day${ApiKey}&language=en-US&page=1`)\r\n      .then((res) => res.json())\r\n      .then((data) => setTrendingTv(data.results));\r\n  });\r\n\r\n  //   ======trending top rated=================\r\n  const {} = useQuery(\"trendingtoprated\", () => {\r\n    fetch(`${BaseUrl}/tv/top_rated${ApiKey}&language=en-US&page=1`)\r\n      .then((res) => res.json())\r\n      .then((data) => setTopRatedTv(data.results));\r\n  });\r\n\r\n  const { data } = useQuery(\"movies\", () => {\r\n    fetch(`${BaseUrl}${popularMoviePath}${ApiKey}&language=en-US&page=1`)\r\n      .then((res) => res.json())\r\n      .then((data) => setPopularMovie(data.results));\r\n  });\r\n\r\n  return (\r\n    <Movies.Provider\r\n      value={{\r\n        trendingMovie,\r\n        topRated,\r\n        trendingTv,\r\n        topRatedTv,\r\n        popularMovieData,\r\n        popularMoviePath,\r\n        inputText,\r\n        setInputText,\r\n        ApiKey,\r\n        BaseUrl,\r\n        SearchMovieUrl,\r\n        setSearchedMovie,\r\n        searchedMovie,\r\n        ImgUrl,\r\n        bookmarked,\r\n        setBookmarked,\r\n      }}\r\n    >\r\n      {children}\r\n    </Movies.Provider>\r\n  );\r\n};\r\n\r\nexport default MovieData;\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../HomePage/HomeCard.css\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Movies } from \"../../MovieData\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst HomeCard = ({ cardData }) => {\r\n  const [isBookmarkOpen, setIsBookmarkOpen] = useState(false);\r\n\r\n  const ImgUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  const { bookmarked, setBookmarked } = useContext(Movies);\r\n\r\n  // console.log(cardData)\r\n\r\n  const bookmarkPresent = (data) => {\r\n    return bookmarked.some((bookmarkData) => bookmarkData.id === data.id);\r\n  };\r\n  // console.log(bookmarked);\r\n\r\n  return (\r\n    <div>\r\n      <section\r\n        className=\"homecard relative hover:cursor-pointer sm:w-[200px] md:w-[250px] w-[150px] lg:w-[300px]\"\r\n        key={cardData.id}\r\n      >\r\n        <span\r\n          className=\"absolute top-2 bg-[rgba(76,76,76,0.4)] hover:bg-[rgba(76,76,76,0.8)] rounded-full flex justify-center items-center \r\n          w-[35px] h-[35px] right-2\"\r\n          onClick={() => setIsBookmarkOpen(!isBookmarkOpen)}\r\n        >\r\n          {/* {isBookmarkOpen ? (\r\n            <motion.img\r\n            initial={{ opacity: 0, width: 0 }}\r\n              animate={{ opacity: 1, width: \"20px\" }}\r\n              transition={{\r\n                duration: 0.6,\r\n              }}\r\n              src=\"/images/active_bookmark.png\"\r\n              alt=\"\"\r\n              onClick={() => setBookmarked(data => data.filter(bookmark => bookmark.id !== cardData.id))}\r\n            />\r\n          ) : (\r\n            <img className=\"w-[20px]\" src=\"/images/notActive_bookmark.png\" alt=\"\"  \r\n            onClick={(bookmarkedData) => setBookmarked((data) => [...data,cardData])}/>\r\n          )} */}\r\n\r\n          {bookmarkPresent(cardData) ? (\r\n            <motion.img\r\n              initial={{ opacity: 0, width: 0 }}\r\n              animate={{ opacity: 1, width: \"20px\" }}\r\n              transition={{\r\n                duration: 0.6,\r\n              }}\r\n              src=\"/images/active_bookmark.png\"\r\n              alt=\"\"\r\n              onClick={() =>\r\n                setBookmarked((data) =>\r\n                  data.filter((bookmark) => bookmark.id !== cardData.id)\r\n                )\r\n              }\r\n            />\r\n          ) : (\r\n            <img\r\n              \r\n              className=\"w-[20px]\"\r\n              src=\"/images/notActive_bookmark.png\"\r\n              alt=\"\"\r\n              onClick={() => setBookmarked((data) => [...data, cardData])}\r\n            />\r\n          )}\r\n        </span>\r\n        <Link to=\"moviedetail\" state={cardData}>\r\n          <div className=\"img\">\r\n            <img\r\n              className=\"rounded-2xl\"\r\n              src={ImgUrl + cardData.poster_path}\r\n              alt={cardData.title}\r\n            />\r\n          </div>\r\n        </Link>\r\n        <h2>\r\n          {cardData.title}\r\n          {cardData.name}\r\n        </h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeCard;\r\n"],"names":["_extends","target","i","source","key","__name","Action","createPath","_ref","pathname","search","hash","parsePath","path","parsedPath","hashIndex","searchIndex","ResultType","invariant","value","message","resolvePath","to","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativePath","segments","segment","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","joinPaths","paths","isPolyfill","x","y","is","Object","useState","useEffect","useLayoutEffect","useDebugValue","React","useSyncExternalStore$2","subscribe","getSnapshot","getServerSnapshot","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","prevValue","nextValue","useSyncExternalStore$1","canUseDOM","window","document","createElement","isServerEnvironment","shim","module","useSyncExternalStore","NavigationContext","LocationContext","RouteContext","outlet","matches","useHref","_temp","relative","useInRouterContext","basename","navigator","useResolvedPath","joinedPathname","createHref","useLocation","location","getPathContributingMatches","filter","match","index","route","pathnameBase","useNavigate","routePathnamesJson","JSON","stringify","map","activeRef","current","options","go","parse","replace","push","state","_temp2","DataRouterHook","AwaitRenderStatus","Promise","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","length","indexOf","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","button","_excluded","Link","_ref4","ref","onClick","reloadDocument","preventScrollReset","rest","href","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","_jsx","replaceProp","navigate","preventDefault","undefined","MotionConfigContext","createContext","p","MotionContext","useVisualElementContext","useContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","isRefObject","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","createDefinition","propNames","featureDefinitions","loadFeatures","features","useConstant","init","globalProjectionState","id","useProjectionId","LayoutGroupContext","VisualElementHandler","React__default","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","MotionComponent","configAndProps","layoutId","useLayoutId","isStatic","projectionId","lazyStrictMode","strict","initialLayoutGroupConfig","_jsxs","ForwardRefComponent","forwardRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","translateAlias","sortTransformProps","a","b","buildTransform","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","isCSSVariable","getValueAsType","type","clamp","min","max","sanitize","floatRegex","colorRegex","singleColorRegex","isString","number","alpha","scale","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","isColorString","testProp","splitColor","aName","bName","cName","c","hsla","hue","saturation","lightness","alpha$1","clampRgbUnit","rgbUnit","rgba","red","green","blue","parseHex","r","g","hex","color","colorToken","numberToken","test","_a","_b","_c","_d","analyse","values","numColors","colors","numbers","createTransformer","tokenised","numValues","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","int","numberValueTypes","buildHTMLStyles","latestValues","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","animationProps","tapProps","panProps","inViewProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","spacing","useDashCase","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","elementProps","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","AnimationType","addDomEvent","eventName","handler","useDomEvent","useFocusGesture","whileFocus","animationState","onFocus","onBlur","isMouseEvent","isTouchEvent","filterPrimaryPointer","eventHandler","defaultPagePoint","pointFromTouch","e","pointType","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","supportsTouchEvents","supportsMouseEvents","mouseEventNames","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","useHoverGesture","onHoverStart","onHoverEnd","whileHover","isNodeOrChild","child","useUnmountEffect","__rest","s","t","warning","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","duration","bounce","velocity","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","d","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restSpeed","restDelta","damping","isResolvedFromDuration","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","dampedAngularFreq","freqForT","isBelowVelocityThreshold","isBelowDisplacementThreshold","_t","progress","toFromDifference","mix","hueToRgb","q","hslaToRgba","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","mixColor","fromColorType","toColorType","fromColor","toColor","blended","isNum","combineFunctions","pipe","transformers","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","numRGB","numHSL","template","originStats","targetStats","mixNumber","detectMixerFactory","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","defaultOffset","_value","convertOffsetToTimes","o","keyframes","times","createInterpolator","decay","timeConstant","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","defaultTimestep","getCurrentTime","onNextFrame","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","keepAlive","immediate","addToCurrentFrame","buffer","frameData","maxElapsed","useDefaultElapsed","frame","stepsOrder","steps","acc","sync","process","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","timestamp","getFrameData","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","autoplay","driver","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","isComplete","interpolateFromNumber","animator","animation","repeat","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","prev","checkBoundary","isPoint","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","defaultEnvironment","env","warned","warnOnce","condition","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","useViewport","whileInView","onViewportEnter","onViewportLeave","viewport","shouldObserve","useMissingIntersectionObserver","useIntersectionObserver","thresholdNames","rootMargin","amount","once","intersectionCallback","isIntersecting","fallback","makeRenderlessComponent","hook","gestureAnimations","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prevLength","secondsToMilliseconds","seconds","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","isAnimatable","underDampedSpring","criticallyDampedSpring","linearTween","defaultTransitions","getDefaultTransition","valueKey","transitionFactory","defaultValueTypes","getDefaultValueType","defaultValueType","instantAnimationState","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","convertTransitionToAnimationOptions","yoyo","flip","loop","getDelayFromTransition","getValueTransition","hydrateKeyframes","getPopmotionAnimationOptions","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","start","set","finalTarget","potentialUnitType","delayTimer","controls","isNumericalString","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","numSubscriptions","isFloat","MotionValue","render","subscription","passiveEffect","resolve","motionValue","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","getCurrent","getVelocity","resolveVariant","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","animateVisualElement","animations","variant","animateVariant","resolvedDefinition","animateTarget","getChildAnimations","forwardDelay","animateChildren","first","last","transitionOverride","willChange","animationTypeState","shouldBlockAnimation","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","safeToRemove","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","hasTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","transformBox","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","useDrag","groupDragControls","dragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","names","createLifecycles","managers","propSubscriptions","lifecycles","manager","on","propListener","args","updateMotionValuesFromProps","existingValue","latestValue","featureNames","numFeatures","treeType","build","getBaseTarget","makeTargetAnimatable","renderInstance","readValueFromInstance","removeValueFromRenderState","sortNodePosition","presenceId","blockInitialAnimation","isMounted","valueSubscriptions","prevMotionValues","baseTarget","removeFromVariantTree","triggerBuild","bindToMotionValue","removeOnChange","removeOnRenderRequest","initialMotionValues","newInstance","remove","renderedProps","isStrict","ProjectionNodeConstructor","isEnabled","layoutScroll","closestVariantNode","other","visibility","canMutate","newProps","startAtParent","numVariantProps","cssVariableRegex","parseCSSVariable","token","getVariableValue","depth","resolveCSSVariables","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","getComputedStyle","htmlConfig","domElement","defaultType","computedStyle","mutableState","transformValues","htmlVisualElement","svgVisualElement","_element","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","add","didUpdate","addEventListener","setOptions","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","isCloseTo","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","_e","identityProjection","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","resolveTargetDelta","calcProjection","subscriptionManager","isLayoutDirty","unblockTimeout","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measured","roundBox","prevLayout","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","boxWithoutScroll","isScrollRoot","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","stack","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","featureBundle","motion","scheduleMicrotask","error","NotifyManager","_proto","_this","_this2","_len","_key","_this3","queue","fn","notifyManager","unstable_batchedUpdates","ReactDOM","Movies","HomeCard","cardData","isBookmarkOpen","setIsBookmarkOpen","ImgUrl","bookmarked","setBookmarked","data","some","bookmarkData","opacity","width","bookmark","poster_path","title","HomeCard$1"],"mappings":"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"}